/*
on the name of god
author: Parag Jain
problem 12:
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would 
be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be: 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
Let us list the factors of the first seven triangle numbers:
     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.What is the value of the first 
triangle number to have over five hundred divisors?
Date: 7/3/2020
*/
#include <iostream>
#include <math.h>
#include <vector>
#include <set>
#include <algorithm>

using namespace std;

int total_Divisor(int number) 
{
    int divisor = 0;
    int  squrt = sqrt(number);
    for(int i = 1; i<= squrt; i++)
    {
        if(number % i == 0)
        {
            divisor += 2;
        }
    }
    if (squrt * squrt == number)
    {
        divisor--;
    }
 
    return divisor;
}
int main()
{
int number = 0;
int i = 1;
while(total_Divisor(number) < 500)
{
    number += i;
    i++;
}

cout<<number;  //output
    return 0;
}
